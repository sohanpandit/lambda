name: Deploy Lambdas Based on Changes

on:
  push:
    branches: [ main ]
    paths:
      'src/**'

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      matrixJson: ${{ steps.export.outputs.matrixJson }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Generate filters.yml from matrix.json
        run: |
          echo filters.yml
          jq -r '.[] | "  \(.name):\n    - '\''\(.path)'\''"' .github/dev_matrix.json >> filters.yml
          cat filters.yml

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.event.before }}
          filters: ./filters.yml

      - name: Export filtered matrix
        id: export
        run: |
          echo "{" > matrix.json
          echo '"matrix": [' >> matrix.json
          
          jq -c '.[]' .github/dev_matrix.json | while read lambda; do
            name=$(echo "$lambda" | jq -r '.name')
            env_key="FILTER_$(echo "$name" | tr '[:lower:]-' '[:upper:]_')"
            match="${!env_key}"
            if [[ "$match" == "true" ]]; then
              echo "$lambda," >> matrix.json
            fi
          done
          cat matrix.json

          sed -i '$ s/,$//' matrix.json
          echo "]}" >> matrix.json

          echo "matrixJson=$(jq -c '.matrix' matrix.json)" >> $GITHUB_OUTPUT
          echo $matrixJson

  deploy:
    needs: filter
    runs-on: ubuntu-latest
    # if: ${{ fromJson(needs.filter.outputs.matrixJson) != '[]' }}
    strategy:
      matrix:
        include: ${{ fromJson(needs.filter.outputs.matrixJson) }}
    steps:
      - uses: actions/checkout@v4

      - name: Package Lambda
        run: |
          cd src/${{ matrix.name }}
          zip -r ../../${{ matrix.name }}.zip .

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ secrets[matrix.lambda] }} \
            --zip-file fileb://${{ matrix.name }}.zip
